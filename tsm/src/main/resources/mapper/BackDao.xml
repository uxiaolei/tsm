<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trkj.tsm.dao.BackDao">
  <resultMap id="BaseResultMap" type="com.trkj.tsm.vo.BackVo">
    <id column="Back_Id" jdbcType="INTEGER" property="backId" />
    <result column="Courserecorddetails_Id" jdbcType="INTEGER" property="courserecorddetailsId" />
    <result column="ClassAlreadyOn" jdbcType="VARCHAR" property="classalreadyon" />
    <result column="Absent" jdbcType="INTEGER" property="absent" />
    <result column="Intention" jdbcType="INTEGER" property="intention" />
    <result column="Back_Time" jdbcType="TIMESTAMP" property="backTime" />
    <result column="Back_Handler" jdbcType="VARCHAR" property="backHandler" />
    <result column="Back_Approval" jdbcType="INTEGER" property="backApproval" />
    <result column="Back_BAppTime" jdbcType="TIMESTAMP" property="backBapptime" />
    <result column="Revoke_AppTime" jdbcType="TIMESTAMP" property="revokeApptime" />
    <result column="UpdateName" jdbcType="VARCHAR" property="updatename" />
    <result column="UpdateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="DeleteName" jdbcType="VARCHAR" property="deletename" />
    <result column="DeleteTime" jdbcType="TIMESTAMP" property="deletetime" />
    <result column="TimeLiness" jdbcType="INTEGER" property="timeliness" />
    <result column="Student_Number" jdbcType="VARCHAR" property="studentNumber" />
    <result column="Classes_Name" jdbcType="VARCHAR" property="classesName" />
    <result column="Course_Name" jdbcType="VARCHAR" property="courseName" />
    <result column="Course_id" jdbcType="INTEGER" property="courseId" />
    <result column="Classes_Id" jdbcType="INTEGER" property="classesId" />
    <association javaType="com.trkj.tsm.vo.CourserecorddetailsVo" property="courserecorddetailsVo">
      <id column="CourseRecorddetails_Id" jdbcType="INTEGER" property="courserecorddetailsId" />
      <result column="CourseRecord_Id" jdbcType="INTEGER" property="courserecordId" />
      <result column="Course_Id" jdbcType="INTEGER" property="courseId" />
      <result column="Classes_Id" jdbcType="INTEGER" property="classesId"/>
      <result column="Learningstate" jdbcType="INTEGER" property="learningstate"/>
      <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    </association>
  </resultMap>

  <sql id="Base_Column_List_CourseRecorddetails">
    crr.CourseRecorddetails_Id, crr.CourseRecord_Id, crr.Course_Id,crr.Classes_Id,crr.Learningstate,crr.remarks
  </sql>
  <sql id="Base_Column_List_Back">
    ba.Back_Id, ba.Courserecorddetails_Id, ba.ClassAlreadyOn, ba.Absent, ba.Intention, ba.Back_Time, ba.Back_Handler,
    ba.Back_Approval, ba.Back_BAppTime, ba.Revoke_AppTime, ba.UpdateName, ba.UpdateTime, ba.DeleteName,
    ba.DeleteTime, ba.TimeLiness
  </sql>

  <select id="selectAllBack" resultMap="BaseResultMap">
    SELECT
	ba.Back_Id,
	ba.Courserecorddetails_Id,
	ba.ClassAlreadyOn,
	ba.Absent,
	ba.Intention,
	ba.Back_Time,
	ba.Back_Handler,
	ba.Back_Approval,
	ba.Back_BAppTime,
	ba.Revoke_AppTime,
	ba.UpdateName,
	ba.UpdateTime,
	ba.DeleteName,
	ba.DeleteTime,
	ba.TimeLiness,
	crr.CourseRecorddetails_Id,
	crr.CourseRecord_Id,
	crr.Course_Id,
	crr.Classes_Id,
	crr.Learningstate,
	crr.remarks ,
	c.Classes_Name as Classes_Name,
	c.Classes_Id  as Classes_Id,
	cad.CourseRecord_Id,
	cad.Student_Id,
	s.Student_Id,
	s.Student_Number as Student_Number,
	co.Course_id as Course_id,
	co.Course_Name as Course_Name

FROM
	back ba
	INNER JOIN courserecorddetails crr ON ba.Courserecorddetails_Id = crr.Courserecorddetails_Id
	inner join classes c on crr.Classes_Id=c.Classes_Id
	inner join course co on co.Course_id=crr.Course_Id
	inner join courserecord cad on cad.CourseRecord_Id=crr.CourseRecord_Id
	inner join student s on s.Student_Id=cad.Student_Id

WHERE
	ba.TimeLiness = 0
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List_Back" />
    from back
    where Back_Id = #{backId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from back
    where Back_Id = #{backId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="Back_Id" keyProperty="backId" parameterType="com.trkj.tsm.entity.Back" useGeneratedKeys="true">
    insert into back (Courserecorddetails_Id, ClassAlreadyOn, 
      Absent, Intention, Back_Time, 
      Back_Handler, Back_Approval, Back_BAppTime, 
      Revoke_AppTime, UpdateName, UpdateTime, 
      DeleteName, DeleteTime, TimeLiness
      )
    values (#{courserecorddetailsId,jdbcType=INTEGER}, #{classalreadyon,jdbcType=VARCHAR}, 
      #{absent,jdbcType=INTEGER}, #{intention,jdbcType=INTEGER}, #{backTime,jdbcType=TIMESTAMP}, 
      #{backHandler,jdbcType=VARCHAR}, #{backApproval,jdbcType=INTEGER}, #{backBapptime,jdbcType=TIMESTAMP}, 
      #{revokeApptime,jdbcType=TIMESTAMP}, #{updatename,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{deletename,jdbcType=VARCHAR}, #{deletetime,jdbcType=TIMESTAMP}, #{timeliness,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="Back_Id" keyProperty="backId" parameterType="com.trkj.tsm.vo.BackVo" useGeneratedKeys="true">
    insert into back
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courserecorddetailsId != null">
        Courserecorddetails_Id,
      </if>
      <if test="classalreadyon != null">
        ClassAlreadyOn,
      </if>
      <if test="absent != null">
        Absent,
      </if>
      <if test="intention != null">
        Intention,
      </if>
      <if test="backTime != null">
        Back_Time,
      </if>
      <if test="backHandler != null">
        Back_Handler,
      </if>
      <if test="backApproval != null">
        Back_Approval,
      </if>
      <if test="backBapptime != null">
        Back_BAppTime,
      </if>
      <if test="revokeApptime != null">
        Revoke_AppTime,
      </if>
      <if test="updatename != null">
        UpdateName,
      </if>
      <if test="updatetime != null">
        UpdateTime,
      </if>
      <if test="deletename != null">
        DeleteName,
      </if>
      <if test="deletetime != null">
        DeleteTime,
      </if>
      <if test="timeliness != null">
        TimeLiness,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courserecorddetailsId != null">
        #{courserecorddetailsId,jdbcType=INTEGER},
      </if>
      <if test="classalreadyon != null">
        #{classalreadyon,jdbcType=VARCHAR},
      </if>
      <if test="absent != null">
        #{absent,jdbcType=INTEGER},
      </if>
      <if test="intention != null">
        #{intention,jdbcType=INTEGER},
      </if>
      <if test="backTime != null">
        #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backHandler != null">
        #{backHandler,jdbcType=VARCHAR},
      </if>
      <if test="backApproval != null">
        #{backApproval,jdbcType=INTEGER},
      </if>
      <if test="backBapptime != null">
        #{backBapptime,jdbcType=TIMESTAMP},
      </if>
      <if test="revokeApptime != null">
        #{revokeApptime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatename != null">
        #{updatename,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletename != null">
        #{deletename,jdbcType=VARCHAR},
      </if>
      <if test="deletetime != null">
        #{deletetime,jdbcType=TIMESTAMP},
      </if>
      <if test="timeliness != null">
        #{timeliness,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trkj.tsm.entity.Back">
    update back
    <set>
      <if test="courserecorddetailsId != null">
        Courserecorddetails_Id = #{courserecorddetailsId,jdbcType=INTEGER},
      </if>
      <if test="classalreadyon != null">
        ClassAlreadyOn = #{classalreadyon,jdbcType=VARCHAR},
      </if>
      <if test="absent != null">
        Absent = #{absent,jdbcType=INTEGER},
      </if>
      <if test="intention != null">
        Intention = #{intention,jdbcType=INTEGER},
      </if>
      <if test="backTime != null">
        Back_Time = #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backHandler != null">
        Back_Handler = #{backHandler,jdbcType=VARCHAR},
      </if>
      <if test="backApproval != null">
        Back_Approval = #{backApproval,jdbcType=INTEGER},
      </if>
      <if test="backBapptime != null">
        Back_BAppTime = #{backBapptime,jdbcType=TIMESTAMP},
      </if>
      <if test="revokeApptime != null">
        Revoke_AppTime = #{revokeApptime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatename != null">
        UpdateName = #{updatename,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletename != null">
        DeleteName = #{deletename,jdbcType=VARCHAR},
      </if>
      <if test="deletetime != null">
        DeleteTime = #{deletetime,jdbcType=TIMESTAMP},
      </if>
      <if test="timeliness != null">
        TimeLiness = #{timeliness,jdbcType=INTEGER},
      </if>
    </set>
    where Back_Id = #{backId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trkj.tsm.entity.Back">
    update back
    set Courserecorddetails_Id = #{courserecorddetailsId,jdbcType=INTEGER},
      ClassAlreadyOn = #{classalreadyon,jdbcType=VARCHAR},
      Absent = #{absent,jdbcType=INTEGER},
      Intention = #{intention,jdbcType=INTEGER},
      Back_Time = #{backTime,jdbcType=TIMESTAMP},
      Back_Handler = #{backHandler,jdbcType=VARCHAR},
      Back_Approval = #{backApproval,jdbcType=INTEGER},
      Back_BAppTime = #{backBapptime,jdbcType=TIMESTAMP},
      Revoke_AppTime = #{revokeApptime,jdbcType=TIMESTAMP},
      UpdateName = #{updatename,jdbcType=VARCHAR},
      UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
      DeleteName = #{deletename,jdbcType=VARCHAR},
      DeleteTime = #{deletetime,jdbcType=TIMESTAMP},
      TimeLiness = #{timeliness,jdbcType=INTEGER}
    where Back_Id = #{backId,jdbcType=INTEGER}
  </update>
</mapper>