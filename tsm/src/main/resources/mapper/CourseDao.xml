<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trkj.tsm.dao.CourseDao">
  <resultMap id="BaseResultMap" type="com.trkj.tsm.entity.Course">
    <id column="Course_id" jdbcType="INTEGER" property="courseId" />
    <result column="Course_Name" jdbcType="VARCHAR" property="courseName" />
    <result column="Course_State" jdbcType="VARCHAR" property="courseState" />
    <result column="Classhours" jdbcType="INTEGER" property="classhours" />
    <result column="Course_Money" jdbcType="DECIMAL" property="courseMoney" />
    <result column="AddName" jdbcType="VARCHAR" property="addname" />
    <result column="ADDTIME" jdbcType="TIMESTAMP" property="addtime" />
    <result column="UpdateName" jdbcType="VARCHAR" property="updatename" />
    <result column="UpdateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="StopTime" jdbcType="TIMESTAMP" property="stoptime" />
    <result column="StopName" jdbcType="VARCHAR" property="stopname" />
    <result column="BeginTime" jdbcType="TIMESTAMP" property="begintime" />
    <result column="BeginName" jdbcType="VARCHAR" property="beginname" />
    <result column="DeleteName" jdbcType="VARCHAR" property="deletename" />
    <result column="DeleteTime" jdbcType="TIMESTAMP" property="deletetime" />
    <result column="TimeLiness" jdbcType="INTEGER" property="timeliness" />

    <association javaType="com.trkj.tsm.entity.Classtype" property="classtype" >
      <id column="ClassType_Id" jdbcType="INTEGER" property="classtypeId" />
      <result column="ClassType_Name" jdbcType="VARCHAR" property="classtypeName" />
      <result column="AddName" jdbcType="VARCHAR" property="addname" />
      <result column="AddTime" jdbcType="TIMESTAMP" property="addtime" />
      <result column="UpdateName" jdbcType="VARCHAR" property="updatename" />
      <result column="UpdateTime" jdbcType="TIMESTAMP" property="updatetime" />
      <result column="DeleteName" jdbcType="VARCHAR" property="deletename" />
      <result column="DeleteTime" jdbcType="TIMESTAMP" property="deletetime" />
      <result column="TimeLiness" jdbcType="INTEGER" property="timeliness" />
    </association>

  </resultMap>
  <sql id="Base_Column_List">
    Course_id, Course_Name, Course_State, Classhours, Course_Money, ClassType_Id, AddName,
    ADDTIME, UpdateName, UpdateTime, StopTime, StopName, BeginTime, BeginName, DeleteName,
    DeleteTime, TimeLiness
  </sql>
  <sql id="Base_Column_List2">
    c.Course_id, c.Course_Name, c.Course_State, c.Classhours, c.Course_Money, c.ClassType_Id, c.AddName,
    c.ADDTIME, c.UpdateName, c.UpdateTime, c.StopTime, c.StopName, c.BeginTime, c.BeginName, c.DeleteName,
    c.DeleteTime, c.TimeLiness,ct.ClassType_Id,ct.ClassType_Name,ct.AddName,ct.AddTime,ct.UpdateName,ct.UpdateTime,
    ct.DeleteName,c.DeleteTime,ct.TimeLiness
  </sql>
<!--根据feeid进行查询显示-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where Course_id = #{courseId,jdbcType=INTEGER}
    AND TimeLiness=0
  </select>
<!--  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from course
    where Course_id = #{courseId,jdbcType=INTEGER}
  </select>-->
  <select id="selCourse" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List2" />
    from course c inner join classtype ct where c.ClassType_Id=ct.ClassType_Id and c.TimeLiness=0
    <if test="sourceName!=null">
    AND  c.Course_Name like CONCAT('%',#{flag,jdbcType=VARCHAR},'%')
    </if>
  </select>
<!--  根据课类id查找课程-->
  <select id="selCourse2" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from course
    where ClassType_Id = #{classtypeid,jdbcType=INTEGER}

  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where Course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="Course_id" keyProperty="courseId" parameterType="com.trkj.tsm.vo.CourseVo" useGeneratedKeys="true">
    insert into course (Course_Name, Course_State, Classhours, 
      Course_Money, ClassType_Id, AddName, 
      ADDTIME, UpdateName, UpdateTime, 
      StopTime, StopName, BeginTime, 
      BeginName, DeleteName, DeleteTime, 
      TimeLiness)
    values (#{courseName,jdbcType=VARCHAR}, #{courseState,jdbcType=VARCHAR}, #{classhours,jdbcType=INTEGER}, 
      #{courseMoney,jdbcType=DECIMAL}, #{classtypeId,jdbcType=INTEGER}, #{addname,jdbcType=VARCHAR}, 
      #{addtime,jdbcType=TIMESTAMP}, #{updatename,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{stoptime,jdbcType=TIMESTAMP}, #{stopname,jdbcType=VARCHAR}, #{begintime,jdbcType=TIMESTAMP},
      #{beginname,jdbcType=VARCHAR}, #{deletename,jdbcType=VARCHAR}, #{deletetime,jdbcType=TIMESTAMP},
      #{timeliness,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="Course_id" keyProperty="courseId" parameterType="com.trkj.tsm.vo.CourseVo" useGeneratedKeys="true">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseName != null">
        Course_Name,
      </if>
      <if test="courseState != null">
        Course_State,
      </if>
      <if test="classhours != null">
        Classhours,
      </if>
      <if test="courseMoney != null">
        Course_Money,
      </if>
      <if test="classtypeId != null">
        ClassType_Id,
      </if>
      <if test="addname != null">
        AddName,
      </if>
      <if test="addtime != null">
        ADDTIME,
      </if>
      <if test="updatename != null">
        UpdateName,
      </if>
      <if test="updatetime != null">
        UpdateTime,
      </if>
      <if test="stoptime != null">
        StopTime,
      </if>
      <if test="stopname != null">
        StopName,
      </if>
      <if test="begintime != null">
        BeginTime,
      </if>
      <if test="beginname != null">
        BeginName,
      </if>
      <if test="deletename != null">
        DeleteName,
      </if>
      <if test="deletetime != null">
        DeleteTime,
      </if>
      <if test="timeliness != null">
        TimeLiness,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseState != null">
        #{courseState,jdbcType=VARCHAR},
      </if>
      <if test="classhours != null">
        #{classhours,jdbcType=INTEGER},
      </if>
      <if test="courseMoney != null">
        #{courseMoney,jdbcType=DECIMAL},
      </if>
      <if test="classtypeId != null">
        #{classtypeId,jdbcType=INTEGER},
      </if>
      <if test="addname != null">
        #{addname,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatename != null">
        #{updatename,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="stoptime != null">
        #{stoptime,jdbcType=TIMESTAMP},
      </if>
      <if test="stopname != null">
        #{stopname,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null">
        #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="beginname != null">
        #{beginname,jdbcType=VARCHAR},
      </if>
      <if test="deletename != null">
        #{deletename,jdbcType=VARCHAR},
      </if>
      <if test="deletetime != null">
        #{deletetime,jdbcType=TIMESTAMP},
      </if>
      <if test="timeliness != null">
        #{timeliness,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trkj.tsm.entity.Course">
    update course
    <set>
      <if test="courseName != null">
        Course_Name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseState != null">
        Course_State = #{courseState,jdbcType=VARCHAR},
      </if>
      <if test="classhours != null">
        Classhours = #{classhours,jdbcType=INTEGER},
      </if>
      <if test="courseMoney != null">
        Course_Money = #{courseMoney,jdbcType=DECIMAL},
      </if>
      <if test="classtypeId != null">
        ClassType_Id = #{classtypeId,jdbcType=INTEGER},
      </if>
      <if test="addname != null">
        AddName = #{addname,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        ADDTIME = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatename != null">
        UpdateName = #{updatename,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="stoptime != null">
        StopTime = #{stoptime,jdbcType=TIMESTAMP},
      </if>
      <if test="stopname != null">
        StopName = #{stopname,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null">
        BeginTime = #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="beginname != null">
        BeginName = #{beginname,jdbcType=VARCHAR},
      </if>
      <if test="deletename != null">
        DeleteName = #{deletename,jdbcType=VARCHAR},
      </if>
      <if test="deletetime != null">
        DeleteTime = #{deletetime,jdbcType=TIMESTAMP},
      </if>
      <if test="timeliness != null">
        TimeLiness = #{timeliness,jdbcType=INTEGER},
      </if>
    </set>
    where Course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trkj.tsm.vo.CourseVo">
    update course
    set Course_Name = #{courseName,jdbcType=VARCHAR},
      Course_State = #{courseState,jdbcType=VARCHAR},
      Classhours = #{classhours,jdbcType=INTEGER},
      Course_Money = #{courseMoney,jdbcType=DECIMAL},
      ClassType_Id = #{classtypeId,jdbcType=INTEGER},
      AddName = #{addname,jdbcType=VARCHAR},
      ADDTIME = #{addtime,jdbcType=TIMESTAMP},
      UpdateName = #{updatename,jdbcType=VARCHAR},
      UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
      StopTime = #{stoptime,jdbcType=TIMESTAMP},
      StopName = #{stopname,jdbcType=VARCHAR},
      BeginTime = #{begintime,jdbcType=TIMESTAMP},
      BeginName = #{beginname,jdbcType=VARCHAR},
      DeleteName = #{deletename,jdbcType=VARCHAR},
      DeleteTime = #{deletetime,jdbcType=TIMESTAMP},
      TimeLiness = #{timeliness,jdbcType=INTEGER}
    where Course_id = #{courseId,jdbcType=INTEGER}
  </update>
</mapper>